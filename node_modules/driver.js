"use strict";

module.exports = function(shared) {
    return {
        quoteUnqualifiedIdentifier : function(identifier) { 
            return '"' + identifier + '"';
        },
        quoteIdentifier : function(identifier) { 
            // Of course this breaks identifiers with dots in them.
            // Maybe we have to draw the line somewhere. Propel also does it like this ...
            return '"' + identifier.replace('.', '"."') + '"';
        },
        quoteString : function(string) {
            // This breaks strings with "'" in them. Use prepared statements for
            // those. Literal string parameters should only be used for simple
            // things.
            return "'" + string + "'";
        },
        run : function(sql, params, rowCallback, endCallback, errCallback) {
            // TODO: use prepared statements and params
            shared.connect(function(err, client) {
                if (err) {
                    errCallback(err);
                } else {
                    var q = client.query(sql);
                    q.on('row', rowCallback);
                    q.on('end', endCallback);
                }
            });
        }
    }
}